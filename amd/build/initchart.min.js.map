{"version":3,"file":"initchart.min.js","sources":["../src/initchart.js"],"sourcesContent":["require.config({\n    paths: {\n        'highcharts/highcharts': ['https://code.highcharts.com/12.2.0/highcharts'\n            , M.cfg.wwwroot + '/enrol/approvalenrol/vendor/highcharts/highcharts'\n        ],\n        'highcharts/modules/exporting': ['https://code.highcharts.com/12.2.0/modules/exporting'\n            , M.cfg.wwwroot + '/enrol/approvalenrol/vendor/highcharts/exporting'\n        ],\n        'highcharts/modules/export-data': ['https://code.highcharts.com/12.2.0/modules/export-data'\n            , M.cfg.wwwroot + '/enrol/approvalenrol/vendor/highcharts/export-data'\n        ]\n    }\n});\n\ndefine([\n    'jquery',\n    'highcharts/highcharts',\n    'highcharts/modules/exporting',\n    'highcharts/modules/export-data'\n], function ($, Highcharts) {\n    return {\n        init: function (data) {\n            $(document).ready(function () {\n                (function (H) {\n                    H.seriesTypes.pie.prototype.animate = function (init) {\n                        const series = this,\n                            chart = series.chart,\n                            points = series.points,\n                            {\n                                animation\n                            } = series.options,\n                            {\n                                startAngleRad\n                            } = series;\n\n                        /**\n                         * Animate the pie chart point to fan out from the center, creating a sequential animation\n                         * effect starting from given angle. Recursively animates the next point on completion.\n                         *\n                         * @param {Highcharts.point} point\n                         * @param {number} startAngleRad\n                         */\n                        function fanAnimate(point, startAngleRad) {\n                            const graphic = point.graphic,\n                                args = point.shapeArgs;\n\n                            if (graphic && args) {\n\n                                graphic\n                                    // Set inital animation values\n                                    .attr({\n                                        start: startAngleRad,\n                                        end: startAngleRad,\n                                        opacity: 1\n                                    })\n                                    // Animate to the final position\n                                    .animate({\n                                        start: args.start,\n                                        end: args.end\n                                    }, {\n                                        duration: animation.duration / points.length\n                                    }, function () {\n                                        // On complete, start animating the next point\n                                        if (points[point.index + 1]) {\n                                            fanAnimate(points[point.index + 1], args.end);\n                                        }\n                                        // On the last point, fade in the data labels, then\n                                        // apply the inner size\n                                        if (point.index === series.points.length - 1) {\n                                            series.dataLabelsGroup.animate({\n                                                opacity: 1\n                                            },\n                                                void 0,\n                                                function () {\n                                                    points.forEach(point => {\n                                                        point.opacity = 1;\n                                                    });\n                                                    series.update({\n                                                        enableMouseTracking: true\n                                                    }, false);\n                                                    chart.update({\n                                                        plotOptions: {\n                                                            pie: {\n                                                                innerSize: '40%',\n                                                                borderRadius: 8\n                                                            }\n                                                        }\n                                                    });\n                                                });\n                                        }\n                                    });\n                            }\n                        }\n\n                        if (init) {\n                            // Hide points on init\n                            points.forEach(point => {\n                                point.opacity = 0;\n                            });\n                        } else {\n                            fanAnimate(points[0], startAngleRad);\n                        }\n                    };\n                }(Highcharts));\n\n                Highcharts.chart('container', {\n                    chart: {\n                        type: 'pie'\n                    },\n                    title: {\n                        text: ''\n                    },\n                    tooltip: {\n                        headerFormat: '',\n                        pointFormat:\n                            '<span style=\"color:{point.color}\">\\u25cf</span> ' +\n                            '{point.name}: <b>{point.percentage:.2f}%</b>'\n                    },\n                    accessibility: {\n                        point: {\n                            valueSuffix: '%'\n                        }\n                    },\n                    plotOptions: {\n                        pie: {\n                            allowPointSelect: true,\n                            borderWidth: 2,\n                            cursor: 'pointer',\n                            dataLabels: {\n                                enabled: true,\n                                format: '<b>{point.name}</b><br>{point.percentage:.2f}%',\n                                distance: 20\n                            }\n                        }\n                    },\n                    exporting: {\n                        buttons: {\n                            contextButton: {\n                                menuItems: [\n                                    'downloadCSV',\n                                    'viewFullscreen'\n                                ]\n                            }\n                        }\n                    },\n                    credits: {\n                        enabled: false\n                    },\n                    series: [{\n                        // Disable mouse tracking on load, enable after custom animation\n                        enableMouseTracking: false,\n                        name: 'Counts',\n                        animation: {\n                            duration: 2000\n                        },\n                        colorByPoint: true,\n                        data: data\n                    }]\n                });\n            });\n        }\n    };\n});"],"names":["require","config","paths","M","cfg","wwwroot","define","$","Highcharts","init","data","document","ready","seriesTypes","pie","prototype","animate","series","this","chart","points","animation","options","startAngleRad","forEach","point","opacity","fanAnimate","graphic","args","shapeArgs","attr","start","end","duration","length","index","dataLabelsGroup","update","enableMouseTracking","plotOptions","innerSize","borderRadius","type","title","text","tooltip","headerFormat","pointFormat","accessibility","valueSuffix","allowPointSelect","borderWidth","cursor","dataLabels","enabled","format","distance","exporting","buttons","contextButton","menuItems","credits","name","colorByPoint"],"mappings":"AAAAA,QAAQC,OAAO,CACXC,MAAO,yBACsB,CAAC,gDACpBC,EAAEC,IAAIC,QAAU,oFAEU,CAAC,uDAC3BF,EAAEC,IAAIC,QAAU,qFAEY,CAAC,yDAC7BF,EAAEC,IAAIC,QAAU,yDAK9BC,uCAAO,CACH,SACA,wBACA,+BACA,mCACD,SAAUC,EAAGC,kBACL,CACHC,KAAM,SAAUC,MACZH,EAAEI,UAAUC,OAAM,WAiFZJ,WA/EIK,YAAYC,IAAIC,UAAUC,QAAU,SAAUP,YACtCQ,OAASC,KACXC,MAAQF,OAAOE,MACfC,OAASH,OAAOG,QAChBC,UACIA,WACAJ,OAAOK,SACXC,cACIA,eACAN,OA6DJR,KAEAW,OAAOI,SAAQC,QACXA,MAAMC,QAAU,cAvDfC,WAAWF,MAAOF,qBACjBK,QAAUH,MAAMG,QAClBC,KAAOJ,MAAMK,UAEbF,SAAWC,MAEXD,QAEKG,KAAK,CACFC,MAAOT,cACPU,IAAKV,cACLG,QAAS,IAGZV,QAAQ,CACLgB,MAAOH,KAAKG,MACZC,IAAKJ,KAAKI,KACX,CACCC,SAAUb,UAAUa,SAAWd,OAAOe,SACvC,WAEKf,OAAOK,MAAMW,MAAQ,IACrBT,WAAWP,OAAOK,MAAMW,MAAQ,GAAIP,KAAKI,KAIzCR,MAAMW,QAAUnB,OAAOG,OAAOe,OAAS,GACvClB,OAAOoB,gBAAgBrB,QAAQ,CAC3BU,QAAS,QAET,GACA,WACIN,OAAOI,SAAQC,QACXA,MAAMC,QAAU,KAEpBT,OAAOqB,OAAO,CACVC,qBAAqB,IACtB,GACHpB,MAAMmB,OAAO,CACTE,YAAa,CACT1B,IAAK,CACD2B,UAAW,MACXC,aAAc,YAgBlDf,CAAWP,OAAO,GAAIG,gBAKlCf,WAAWW,MAAM,YAAa,CAC1BA,MAAO,CACHwB,KAAM,OAEVC,MAAO,CACHC,KAAM,IAEVC,QAAS,CACLC,aAAc,GACdC,YACI,2FAGRC,cAAe,CACXxB,MAAO,CACHyB,YAAa,MAGrBV,YAAa,CACT1B,IAAK,CACDqC,kBAAkB,EAClBC,YAAa,EACbC,OAAQ,UACRC,WAAY,CACRC,SAAS,EACTC,OAAQ,iDACRC,SAAU,MAItBC,UAAW,CACPC,QAAS,CACLC,cAAe,CACXC,UAAW,CACP,cACA,qBAKhBC,QAAS,CACLP,SAAS,GAEbtC,OAAQ,CAAC,CAELsB,qBAAqB,EACrBwB,KAAM,SACN1C,UAAW,CACPa,SAAU,KAEd8B,cAAc,EACdtD,KAAMA"}